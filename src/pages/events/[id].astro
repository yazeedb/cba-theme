---
import { getEvents } from '../../data';
import Layout from '../../layouts/Layout.astro';
import Section from '../../components/Section.astro';
import { Dropdown } from '../../components/Dropdown';
import { format } from 'date-fns';
import { generateGoogleCalendarUrl } from '../../utils';

export async function getStaticPaths() {
  const events = await getEvents();

  return events.map((e) => ({ params: { id: e.id }, props: { events } }));
}

const { id } = Astro.params;
const { events } = Astro.props;

const event = events.find((e) => e.id === id)!;
---

<Layout title={event.title}>
  <main>
    <Section containerClass="mt-4 text-paragraph-dark">
      <header id="event-header">
        <a href="/events" class="flex items-center gap-1 text-href-color mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-4 h-4"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5"></path>
          </svg>

          All Events
        </a>

        <section class="flex flex-col sm:flex-row gap-2 justify-between">
          <section>
            <h1 class="section-heading text-primary-header-dark">
              {event.title}
            </h1>

            <section
              id="time-and-date"
              class="flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-2"
            >
              <span>
                {format(event.date, 'MMMM d, yyyy')}
              </span>

              <span class="hidden sm:block">|</span>

              <span>
                {event.startTime} - {event.endTime}
              </span>
            </section>
          </section>

          <Dropdown
            client:load
            title="Add to Calendar"
            links={[
              {
                label: 'Google Calendar',
                target: '_blank',
                rel: 'noreferrer noopener',
                href: generateGoogleCalendarUrl({
                  title: event.title,
                  details: event.description,
                  startDate: new Date(event.date),
                  endDate: new Date(event.date),
                  location: '',
                  timezone: ''
                })
              }
            ]}
          />
        </section>
      </header>

      <section id="event-body" class="flex flex-col gap-4">
        <img
          id="event-image"
          src={event.image}
          alt={`Main image for ${event.title}`}
          class="rounded"
        />

        <article
          id="event-details"
          class="section-paragraph text-paragraph-dark flex-1"
        >
          {event.description}
        </article>
      </section>
    </Section>
  </main>
</Layout>
