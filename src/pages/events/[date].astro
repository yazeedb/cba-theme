---
import Layout from '../../layouts/Layout.astro';
import Section from '../../components/Section.astro';
import { Dropdown } from '../../components/Dropdown';
import { format, isSameDay } from 'date-fns';
import {
  getEvents,
  formatDateTimeForUrl,
  createGoogleCalendarUrl
} from '../../data/events';

export async function getStaticPaths() {
  const events = await getEvents();

  return events.map((e) => ({
    params: { date: formatDateTimeForUrl(e.start_date) },
    props: { events }
  }));
}

const { date } = Astro.params;
const { events } = Astro.props;

// TODO: This can easily 404, add 404 logic/view.
const matchingEvents = events.filter(
  (e) => formatDateTimeForUrl(e.start_date) === date
)!;

const formatDate = (date: string) => format(date, 'MMMM d, yyyy');
const formatTime = (date: string) => format(date, 'h:mm aa');
---

<Layout title={`Events on ${date}`}>
  <main>
    <Section containerClass="mt-4 text-paragraph-dark">
      <header id="event-header">
        <a href="/events" class="flex items-center gap-1 text-href-color mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-4 h-4"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5"></path>
          </svg>

          All Events
        </a>
      </header>

      <ul>
        {
          [...matchingEvents, ...matchingEvents, ...matchingEvents].map((e) => {
            const startDate = formatDate(e.start_date);
            const endDate = formatDate(e.end_date);

            const startTime = formatTime(e.start_date);
            const endTime = formatTime(e.end_date);

            return (
              <li class="mb-16">
                <section class="mb-3 flex flex-col sm:flex-row sm:gap-0 gap-2 justify-between">
                  <section>
                    <h1 class="section-heading text-primary-header-dark">
                      {e.title}
                    </h1>

                    <section
                      id="time-and-date"
                      class="my-2 flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-2"
                    >
                      <span>
                        {isSameDay(e.start_date, e.end_date)
                          ? startDate
                          : `${startDate} - ${endDate}`}
                      </span>

                      <span class="hidden sm:block">|</span>

                      <span>
                        {e.all_day ? 'All day' : `${startTime} - ${endTime}`}
                      </span>
                    </section>
                  </section>

                  <Dropdown
                    client:load
                    title="Add to Calendar"
                    links={[
                      {
                        label: 'Google Calendar',
                        target: '_blank',
                        rel: 'noreferrer noopener',
                        href: createGoogleCalendarUrl(e)
                      }
                    ]}
                  />
                </section>

                <section
                  id="event-body"
                  class="flex md:flex-row flex-col gap-4"
                >
                  <article
                    id="event-details"
                    class="w-2/3 section-paragraph text-paragraph-dark flex-1"
                    set:html={e.description}
                  />

                  <img
                    id="event-image"
                    src={e.image.src}
                    alt={e.image.alt}
                    class="rounded w-1/3"
                  />
                </section>
              </li>
            );
          })
        }
      </ul>
    </Section>
  </main>
</Layout>
